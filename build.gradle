buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = targetCompatibility = "1.6" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.6"
}

// Define properties file
ext.configFile = file "mod.properties"
configFile.withReader {
    // Load config. Can be referenced as config
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}
//Set things from the properties file
version = config.modversion
group = "com.github.mine-blade.battlegear"
minecraft {
    runDir = "eclipse"
    version = config.mcversion + "-" + config.forgeversion
	mappings = "snapshot_" + config.mapping
    replace '$version', version
	makeObfSourceJar = false
}
archivesBaseName = config.mcversion + "-" + config.distname
//Set the workspace
sourceSets {
    main {
        resources {
            srcDir 'battlegear mod src/minecraft' include('assets/**', '*.cfg', '*.png', '*.mcmeta', '*.info')
        }
	    java {
	        srcDir 'battlegear mod src/minecraft' include('mods/**')
	    }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        // replace stuff in mcmod.info, nothing else
        include 'mcmod.info'
        // replace version and mcversion
        expand 'name':config.modname, 'version':config.modversion, 'mcversion':config.mcversion
    }
    // copy everything else
    from(projectDir) {
        include('LICENCE', 'README.md')
    }
    from(sourceSets.main.resources.srcDirs) {
        include('*.lang', '*.wav', '*.png', '*.cfg', '*.mcmeta')
    }
}
//The coremod manifest attributes
def coremodManifest = project.manifest {
    attributes('FMLCorePlugin': config.loadingPlugin ,'FMLCorePluginContainsFMLMod': config.containsMod)
}
jar {
    //Place jar into distribution folder
    destinationDir = file 'battlegear dist'
    //Keep the jar as clean as possible
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // Add Coremod Manifest
    manifest = coremodManifest
}
//Perform checksum and add it next to the jar
jar.doLast { task ->
    ant.checksum file: task.archivePath
}

task jarBGSrc(type:Jar) {
    destinationDir = file 'battlegear api'
    baseName = config.mcversion + "-Battlegear-Src"
    from(sourceSets.main.java.srcDirs){
        include 'mods/battlegear2/**'
        exclude '**/DualHeldLight.java', '**/EquipGearTab.java', '**/SigilTab.java'
    }
    // Add license
    from(projectDir) {
        include 'LICENCE'
    }
}

task jarMUDSrc(type:Jar) {
    destinationDir = file 'battlegear api'
    baseName = config.mcversion + "-MUD-Src"
    from(sourceSets.main.java.srcDirs) {
        include 'mods/mud/**'
    }
    // Add license
    from(projectDir) {
        include 'LICENCE'
    }
}

task jarBGBin(type:Jar) {
    destinationDir = file 'battlegear api'
    baseName = config.mcversion + "-Battlegear-Bin"
    // Add classes
    from('build/classes/main'){
        include 'mods/battlegear2/**'
        exclude '**/DualHeldLight.class', '**/EquipGearTab.class', '**/SigilTab.class'
    }
    // Add Resources
    from(sourceSets.main.resources.srcDirs) {
        include 'assets/battlegear2/**', '*.cfg', '*.png', '*.info', '*.mcmeta'
    }
    // Add license
    from(projectDir) {
        include 'LICENCE'
    }
    // Add Coremod Manifest
    manifest = coremodManifest
}

task jarMUDBin(type:Jar){
    destinationDir = file 'battlegear api'
    baseName = config.mcversion + "-MUD-Bin"
    // Add classes
    from('build/classes/main') {
        include 'mods/mud/**'
    }
    // Add resources
    from(sourceSets.main.resources.srcDirs) {
        include 'assets/mud/**'
    }
    // Add license
    from(projectDir) {
        include 'LICENCE'
    }
    manifest{
        attributes('Main-Class': 'mods.mud.utils.FileDeleter')
    }
}
tasks.build.dependsOn('jarMUDSrc','jarBGSrc','jarMUDBin','jarBGBin')
idea { module { inheritOutputDirs = true } }
